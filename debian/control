Source: seat-inspect
Maintainer: Scott Wakeling <scott@diskfish.org>
Section: utils
Priority: optional
Build-Depends: python (>= 2.6.6-3), debhelper (>= 9), python-dbus (>= 1.2.0-2), python3-systemd (>= 215-12)
Standards-Version: 3.9.6
X-Python-Version: >= 2.7

Package: seat-inspect
Architecture: all
Depends: ${misc:Depends}, ${python:Depends}
Description: Understand and troubleshoot systemd.
 seat-inspect gives a status report of systemd facilities such as Multi-Seat,
 Inhibitor Locks, Services, Targets, and other types of Unit.
 .
 The intent of running the code is to have an overview of the system status,
 both to see what the new facilities are about, and to figure out if there is
 something out of place.
 .
 seat-inspect is not a finished tool, but a starting point. Enrico Zini put the
 first verison on github hoping that people would fork it and add their own
 extra sanity checks and warnings, that it could grow not only into a standard
 thing to run if a system acts weird, but also a standard thing to hack on for
 those trying to learn more about Multi-Seat and systemd.
 .
 As it is now, it should be able to issue warnings if some bits are missing for
 network-manager or shutdown functions to work correctly, or if some Devices or
 Services are having problems. It all needs more testing by people with systems
 that are experiencing such issues.
 .
 Tinkering with the code can be an interesting way to explore the new
 functionalities that we recently grew. Ofcourse, the same can be done, and
 in more detail, with loginctl, systemctl, and journalctl calls of various
 configuration, but seat-inspect provides the only high-level view of
 everything.
